name: Pack extension

on:
  push:
    branches: [ main ]
    tags: ['v*']
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run tests
        run: npm test
      - name: Build ZIP
        run: npm run build:zip
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: openwhen-zip
          path: dist/*.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: openwhen-zip
          path: dist
      - name: Determine release body
        id: release_body
        run: |
          if [ -f CHANGELOG.md ]; then
            body=$(sed -n '1,200p' CHANGELOG.md | sed 's/"/\\"/g')
          else
            body=$(git log -n 20 --pretty=format:"- %s")
          fi
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            ${{ steps.release_body.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Find built ZIP
        id: find_zip
        run: |
          set -euo pipefail
          echo "Looking for built zip in dist/"
          ls -la dist || true
          FILE=$(ls dist/*.zip 2>/dev/null | head -n1 || true)
          if [ -z "${FILE}" ]; then
            echo "No zip artifact found in dist/; ensure build:zip produced a zip into dist/" >&2
            exit 1
          fi
          echo "zip=$FILE" >> $GITHUB_OUTPUT

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_zip.outputs.zip }}
          asset_name: openwhen-${{ github.ref_name }}.zip
          asset_content_type: application/zip
